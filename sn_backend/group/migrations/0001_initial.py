# Generated by Django 4.2.6 on 2024-01-17 14:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('body', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('body', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='cover_images')),
                ('biography', models.CharField(blank=True, default='', max_length=255)),
                ('members_count', models.IntegerField(default=0)),
                ('is_private_group', models.BooleanField(default=False)),
                ('today_posts_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_admin', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='group_members', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(related_name='group_moderators', to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(related_name='group_quiz', to='group.question')),
                ('rules', models.ManyToManyField(related_name='group_rules', to='group.rule')),
            ],
        ),
    ]
